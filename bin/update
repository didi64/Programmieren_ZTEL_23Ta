#!/bin/bash

set -euo pipefail

repo_url="https://github.com/didi64/Programmieren_ZTel_23Ta"
root="${HOME}/work"
repo_url="$root/.src"
nb_dir="${root}/notebooks"
contents="${repo_url}/contents.txt"

is_number='^[0-9]+$'

options=""
HELP=$(cat <<EOF

usage:
======
1) update <Nummer der Lektion>
   kopiert die Files der Lektion <Nummer der Lektion> nach  work/notebooks
       

2) update <file1> [<file2> ...]
   Kopiere, falls vorhanden, die FIles oder Ordner <file1>,... nach work/notebooks

Beispiele:
==========
studi@jlab:~/work$ update 1
studi@jlab:~/work$ update some_notebook.ipynb
studi@jlab:~/work$ update some_folder\n
 
EOF
)

if [[ $# -eq 0 ]]; then 
    printf "$HELP"
    exit 1
fi

process_file () {
    echo "target: $nb_dir"
    find "$repo_url" -type d -name $1 -exec cp -ri {} "$nb_dir" \; -exec echo "adding folder {}" \;
    find "$repo_url" -type f -name $1 -exec cp -i {} "$nb_dir" \; -exec echo "adding file {}" \;
}

pull () {
    git -C "$repo_url" pull
    # find "$repo_url" -type f -name "*.ipynb" -exec chmod 444 {} \;
}

if [[ $# -ge 1 ]] && [[ "$1" == "-f" ]]; then
    git -C "$repo_url"  reset --hard HEAD
    set -- "${@:2}"
fi

pull

# echo "args: $@"
for item in "$@"; do
    if [[ $item =~ $is_number ]] ; then
        files=$(sed -n "s/^${item}:\(.*\)/\1/p" "$contents")
        for file in $files; do
            process_file $file
        done
    else
        process_file $item
    fi  
done