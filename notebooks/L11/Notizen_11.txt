01 Intro, Docker und Jupyterlab Installieren
02 Syntax und Semantik-Fehler, Variabeln Funktionen, Minipython mit For
03 Basic Types, if-then-else
04 Module While-Loops
05 break und continue, Platzhalterstrings
06 Methods, Listen Listen mit Listen
07 enum, zip, sorted, Files, Listcomp, Sets
08 Dicts, if expressions any, all
09 Dict, Sortieralgos 16.12


10 Repetition. 06.1. Automat 9.12
11 Test, 13.1. Klassen, 
12 Callbacks, 20.1
13 Games, Projektarbeit infos, Themen fixieren. 27.1.


14 PA 17.2.
15 PA 24.2
16 PA 3.3
17 Projektvorstellung 10.3.
18 Abschluss/ Feedback Projektarbeiten. 17.3




cd .src
git add .
git commit -m 'pruefung'
git push

fuer Pruefung:
update 101

Pruefung allg. Instruktionen.
Kopiere Notebooks mit Aufgaben,
falls ihr beim Bearbeiten versehentlich Zellen loescht, habt ihr immer noch das Original.


Lektion 11
Canvas Intro



Uebe zu zeichnen, z.B. Flaggen 
-> Draw_Flags, mit code in draw_flags.py

import draw_flags

draw_flags.draw_CH_flag(canvas, (10, 10), 80)
draw_flags.draw_BRD_flag(canvas, (110, 10), 80)
draw_flags.draw_BE_flag(canvas, (210, 10), 80)


Japan-Flagge

fuelle Leinwand in grau.
zeichne weisses rechteck im Verhaltnis 5/3 und roter Kreis in der Mitte

def draw_japan_flag(canvas, pos, size):
   
    canvas.fill_style = 'gray'
    canvas.fill_rect(0, 0, canvas.width, canvas.height)
    x0, y0 = pos
    canvas.fill_style = 'white'
    height = size*3/5
    canvas.fill_rect(x0, y0, size, height)

    center = (x0 + size/2, y0 + height/2)
    canvas.fill_style = 'red'
    canvas.fill_circle(*center, radius=height/3)
    



ev. zuerst Output_widget

MultiCanvas_Intro

from Canvas_Aufgaben_A import draw_circle
draw_circle(fg, *position.values(), color='red')

elaborate on Callbacks

from ipywidgets import Output

layout = {'border': '1px solid black'}
out = Output(layout=layout)

def update_postion(x, y):
    position['x'] = x
    position['y'] = y
    with out:
        print(x, y)

mcanvas.on_mouse_down(update_postion)

display(mcanvas,out)

