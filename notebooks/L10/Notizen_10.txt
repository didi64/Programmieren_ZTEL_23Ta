Liebe Studierende,

am Montag werden wir nochmals den Pruefungstoff durchgehen und wir
werden den Pruefungsablauf inkl. Abgabe durchspielen.

Anschliessend folgt ein kurzer Exkurs zur Steuerung einer Maschine/Geraet mit einem Automaten. Ein 3d-Drucker wird z.B. mit sog. g-Codes gesteuert.
Mit solchen g-Codes lassen sich der Druckkopf positionieren, die
Feed-Rate des Filaments festlegen, u.s.w.

Wir werden einen (simulierten) Zeichnungsroboter steuern.


Noch einen schoenen Sonntag.

Beste Gruesse
Dieter





Steuerung von Automaten, bez. Steuerung eines Geraetes mit einem Automaten.

Beispiel 3d-Drucker. 
Der Drucker wird mittels sog. g-Codes gesteuert.
Im Prinzip koennte man diese g-Codes direkt selber eingeben.
Hat jedoch Software, die zu einem 3d-Model eines Objekts das entsprechende g-Code Programm generiert.

Modelliert Automat als abstrakte Maschine.
Automat kann nur einzelne Symbole lesen,
ev. Zustand wechseln und Symbol ausgeben.

Automat operiert in Umgebung, koennen Ausgabezeichen als Befehl interpretieren,
der an das zu steuernde Geraet weitergeleitet wird.


01 Intro, Docker und Jupyterlab Installieren
02 Syntax und Semantik-Fehler, Variabeln Funktionen, Minipython mit For
03 Basic Types, if-then-else
04 Module While-Loops
05 break und continue, Platzhalterstrings
06 Methods, Listen Listen mit Listen
07 enum, zip, sorted, Files, Listcomp, Sets
08 Dicts, if expressions any, all
09 Dict, Sortieralgos 16.12


10 Repetition. 06.1. Automat 9.12
11 Test, 13.1. Klassen, 
12 Callbacks, 20.1
13 Games, Projektarbeit infos, Themen fixieren. 27.1.


14 PA 17.2.
15 PA 24.2
16 PA 3.3
17 Projektvorstellung 10.3.
18 Abschluss/ Feedback Projektarbeiten. 17.3

Pruefung: 
Nicht listen aendern ueber die man iteriert!

xs = [1, 2, 3]
ys = []
for x in xs:
    ys.append(x)
    if x == 1:
        xs.remove(x)
    

Was ist nun xs, ys ???
xs, ys

Review:
int: // und %
2 / 1 ?
3 // 2 ?
10 % 3 ?

Typisches Beispiel: 
Feld mit 8 Spalten und 5 Zeilen

    0  1  2  3  4  5  6  7
    ------------------------
0|  0  1  2  3  4  5  6  7
1|  8  9 10 11 12 13 14 15
2| 16 17 18 19 20 21 22 23
3| 24 25 26 27 28 29 30 31
4| 32 33 34 35 36 37 38 39
 
Feldnummer -> x,y-Koordinaten

# Feld mit 8 Spalten und 5 Zeilen
ncols = 8
nrows = 5

# idx aus x, y, ncols und nrows
x = 3 
y = 4
idx = ...

idx = y*ncols + x
idx

# x, y aus idx und ncols, nrows?
 
x = idx % ncols
y = idx // nrows
(x, y)

# als Prungungsaufgabe:
Schreibe eine Funktion

def xy2idx(x, y, ncols):
    return y*ncols + x


def idx2xy(idx, ncols):
    x = idx % ncols
    y = idx // ncols
    return x, y


table = [[0] * ncols for _ in range(nrows)]
table

table = []
for _ in range(nrows):
    row = [0] * ncols
    table.append(row)


for i in range(ncols*nrows):
    x, y = idx2xy(i, ncols)
    table[y][x] = i
table

fmt='{:>2}'
for i in range(ncols*nrows):
    x, y = idx2xy(i, ncols)
    table[y][x] = fmt.format(i)
table


lines = [' '.join(table[i]) for i in range(nrows)]
lines

s = '\n'.join(lines)
print(s)

---
# float
x = 3.14159
round(x, 3)  # int

fmt = '{:5.3f}'
fmt.format(x))

# beachte
round(0.5)  # ist integer
round(0.5, 0)  # ist float
---
# str ljust ist neu!

s = 'foo'
s.ljust(10)  # linksbuendig, Laenge mind. 10
s.rjust(10)  # rechtsbuendig, Laenge mind. 10

-------

# review sorted

# sortiere nach Absolutwert
numbers = [-3, 2, -1, 5]
sorted(numbers, key=lambda x:abs(x))

WICHTIG
# Wie sortiert dies und wieso?
sorted(numbers, key=lambda x:x)

# sortiere nach Rang
name_rang = [('Bob, 1), ('Alice', 2), (Cathy', 3)]
sorted(numbers, key=lambda x:x[1])

---------
Funktionen mit default-Argumenten
Funktionsaufruf: auspacken von Tuple (Positional Arguments)
Funktionsaufruf: auspacken von Dictionaries (Key-Word Arguments)
---------
Files, strip, split
---------
count_dict, zeige nbf to finc count dict. 
------

Steuerung von Automaten, bez. Steuerung eines Geraetes mit einem Automaten.

Beispiel 3d-Drucker. 
Der Drucker wird mittels sog. g-Codes gesteuert.
Im Prinzip koennte man diese g-Codes direkt selber eingeben.
Hat jedoch Software, die zu einem 3d-Model eines Objekts das entsprechende g-Code Programm generiert.

Modelliert Automat als abstrakte Maschine.
Automat kann nur einzelne Symbole lesen,
ev. Zustand wechseln und Symbol ausgeben.

Automat operiert in Umgebung, koennen Ausgabezeichen als Befehl interpretieren,
der an das zu steuernde Geraet weitergeleitet wird.

Zeichne Kaffeeautomat.

%load_ext tikzmagic

%%tikz -f svg -l automata,positioning
\begin{tikzpicture}[shorten >=1pt, node distance=3cm, bend angle=10, baseline=0pt]
  \node[scale=3] at (2, 3) {Kaffeeautomat};

  \node[state,initial, initial text=]  (q_0) {$0$};
  \node[state]          (q_1) [right=of q_0] {$1$};
  \draw(8, 0);

  \path[->] (q_0) edge[bend left] node[above] {\begin{tabular}{c}Geld einwerfen/ \\ ready\end{tabular}} (q_1)
            (q_1) edge[bend left] node[below] {\begin{tabular}{c}dr\"ucke Knopf/ \\ Kaffee\end{tabular}} (q_0);

\end{tikzpicture}

->Automaten

-> Zeichnungsrobotor I
   kurze Zeichnungsaufgabenm



cmds = [
    'l12',
    'sblue',
    'g100,100',
    'dg200,100',
    'uG-50,0',
    'sred',
    'dG0,50',
]

eingabe = ';'.join(cmds) + ';'
eingabe

-> Zeichnungsrobotor II
   mit Python Programm fuer Zeichnungsroboter erstellen